package org.aksw.iguana.reborn;

import com.google.common.base.Joiner;

/***
 * A default task report comprises the following pieces of information
 * - T: the (t)ask specification
 * - D: a report by the dispatcher
 * - E: data generated by the executor
 *
 * TODO Maybe add task id separately
 *
 * @author raven
 *
 * @param <T>
 * @param <D>
 * @param <E>
 */
public class DefaultTaskReport<T, D, E> {
    protected T taskData;
    protected D dispatcherReport;
    protected E executorReport;

    public DefaultTaskReport(T taskData, D dispatcherReport, E executorReport) {
        super();
        this.taskData = taskData;
        this.dispatcherReport = dispatcherReport;
        this.executorReport = executorReport;
    }

    public T getTaskData() {
        return taskData;
    }

    public D getDispatcherReport() {
        return dispatcherReport;
    }

    public E getExecutorReport() {
        return executorReport;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((dispatcherReport == null) ? 0
                : dispatcherReport.hashCode());
        result = prime * result
                + ((executorReport == null) ? 0 : executorReport.hashCode());
        result = prime * result
                + ((taskData == null) ? 0 : taskData.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        DefaultTaskReport<?, ?, ?> other = (DefaultTaskReport<?, ?, ?>) obj;
        if (dispatcherReport == null) {
            if (other.dispatcherReport != null)
                return false;
        } else if (!dispatcherReport.equals(other.dispatcherReport))
            return false;
        if (executorReport == null) {
            if (other.executorReport != null)
                return false;
        } else if (!executorReport.equals(other.executorReport))
            return false;
        if (taskData == null) {
            if (other.taskData != null)
                return false;
        } else if (!taskData.equals(other.taskData))
            return false;
        return true;
    }

    @Override
    public String toString() {
        return "[" + Joiner.on(", ").join("" + taskData, "" + dispatcherReport, "" + executorReport) + "]";
    }


}
